<?php
    
$errorMessage = "";
if($_POST["userID"] == null) 
{
    $errorMessage = $errorMessage + "The userID was not provided in the request.";
}

if ($_POST["type"] == null)
{
    $errorMessage = $errorMessage + " The type of the region was not provided in the request.";
}

if ($_POST["name"] == null)
{
    $errorMessage = $errorMessage + " The name of the region was not provided in the request.";
}

if ($_POST["description"] == null)
{
    $errorMessage = $errorMessage + " The description of the region was not provided in the request.";
}

if ($_POST["regionID"] == null)
{
    $errorMessage = $errorMessage + " The regionID of the region was not provided in the request.";
}

if ($_POST['polygonPath'] == null)
{
	$errorMessage = $errorMessage + " the polygon path was not provided in the request.";
}


if ($errorMessage != "")
{
	$errorMessage =  "Failed with the following errors: " + $errorMessage;
    $errorResponse = array("error" => $errorMessage);
    echo json_encode($errorResponse);
	return;
}


$dsn = "mysql:host=lovett.usask.ca;dbname=cmpt350_ral362";
$username = "cmpt350_ral362";
$password = "zm6uafeyio";


try {
    $db = new PDO($dsn, $username, $password, array(PDO::ATTR_EMULATE_PREPARES => false, PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION)); 
    $db->setAttribute( PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION );
	//http://php.net/manual/en/function.json-decode.php
	$polygonPath = json_decode($_POST['polygonPath'], true);

	
	if ($polygonPath == null)
	{
		$errorResponse = array("error" => "The polygon path failed to be decoded");
        echo json_encode($errorResponse);
	}
	else
	{
		//NOTE:: UNCOMMENTING THIS WILL DISPLAY THE JSON ID, HOWEVER IT WILL CAUSE WEIRD ERRORS WITH THE PROJECT. IT WILL CAUSE THE REGIONID TO NOT BE RETURNED
		//AND IT WILL CAUSE UNEXPECTED END OF FILES, OR UNEXPECTED TOKEN ERRORS.
		//var_dump($polygonPath);
	}
	
    $regionID = $_POST['regionID'];
	// Remove the current set of coordinates from the database
	$statement = $db->prepare(
	"DELETE FROM t_region_coordinates where reg_identifier = :regionID;");
	$statement->bindParam(':regionID', $regionID, PDO::PARAM_INT);
	$statement->execute();
	
	
	//Insert all of the coordinates into the region_coordinates table.
	$statement = $db->prepare(
	"INSERT INTO t_region_coordinates(reg_identifier, reg_latitude, reg_longitude, reg_order)
		VALUES(
			:regionID,
			:regionLatitude,
			:regionLongitude,
            :regionOrder);");
    
	//$coordinate["k"] is the latitude, and $coordinate["D"] is the longitude. These names are generated by using the JSON.stringify() method in saveRegionToDB method in googlemaps_api_extension.js
	$regionOrder = 1;
    foreach($polygonPath as $coordinate)
	{
		$statement->bindParam(':regionID', $regionID, PDO::PARAM_INT);
		$statement->bindParam(':regionLatitude', $coordinate["k"], PDO::PARAM_STR);
		$statement->bindParam(':regionLongitude', $coordinate["D"], PDO::PARAM_STR);
        $statement->bindParam(':regionOrder', $regionOrder, PDO::PARAM_INT);
		$statement->execute();
        $regionOrder = $regionOrder + 1;
	}
	
	echo $regionID;

}

 catch (PDOException $e) {
    $errorResponse = array("error" => $e->getMessage());
    echo json_encode($errorResponse);
}


?>
